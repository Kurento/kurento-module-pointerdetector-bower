{"version":3,"file":"bundle.js","sources":["../node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","../lib/index.js","../lib/PointerDetectorFilter.js","../lib/complexTypes/index.js","../lib/complexTypes/PointerDetectorWindowMediaParam.js","../lib/complexTypes/WindowParam.js","../node_modules/checktype/index.js","../node_modules/inherits/inherits_browser.js"],"names":["PointerDetectorFilter","require","exports","complexTypes","id","super_","call","this","inherits","checkType","ChecktypeError","Filter","register","abstracts","prototype","addWindow","window","callback","required","params","invoke","clearWindows","removeWindow","windowId","trackColorFromCalibrationRegion","constructorParams","calibrationRegion","type","mediaPipeline","windows","isList","events","concat","module","check","key","value","PointerDetectorWindowMediaParam","WindowParam","checkPointerDetectorWindowMediaParam","height","width","upperRightX","upperRightY","activeImage","imageTransparency","image","checkWindowParam","topRightCornerX","topRightCornerY","SyntaxError","name","constructor","checkArray","Array","item","i","checkBoolean","Boolean","checkNumber","Number","checkInteger","isInteger","checkObject","Object","checkString","String","options","undefined","isArray","checker","console","warn","checkParams","scheme","class_name","result","s","keys","length","checkMethodParams","callparams","method_params","param","index","slice","warning","nVal","isFinite","Math","floor","boolean","double","float","int","create","ctor","superCtor","enumerable","writable","configurable","TempCtor"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module pointerdetector\n *\n * @copyright 2013-2014 Kurento (http://kurento.org/)\n * @license LGPL\n */\n\nvar PointerDetectorFilter = require('./PointerDetectorFilter');\n\n\nexports.PointerDetectorFilter = PointerDetectorFilter;\n\nexports.complexTypes = require('./complexTypes');\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar inherits = require('inherits');\n\nvar checkType = require('checktype');\n\nvar ChecktypeError = checkType.ChecktypeError;\n\nvar Filter = require('kurento-client').register.abstracts.Filter;\n\n/**\n * Builder for the :rom:cls:`PointerDetector`.\n *\n * @classdesc\n *  This type of {@link module:core/abstracts.Filter Filter} detects UI pointers in a video feed.\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:pointerdetector.PointerDetectorFilter\n *\n * @param {external:String} id\n *\n * @fires {@link module:pointerdetector#event:WindowIn WindowIn}\n * @fires {@link module:pointerdetector#event:WindowOut WindowOut}\n */\nfunction PointerDetectorFilter(id){\n  PointerDetectorFilter.super_.call(this, id);\n};\ninherits(PointerDetectorFilter, Filter);\n\n\n/**\n *  Adds a new detection window for the filter to detect pointers entering or exiting the window\n *\n * @alias module:pointerdetector.PointerDetectorFilter.addWindow\n *\n * @param {module:pointerdetector/complexTypes.PointerDetectorWindowMediaParam} window\n *  The window to be added\n *\n * @param {module:pointerdetector.PointerDetectorFilter~addWindowCallback} [callback]\n *\n * @return {external:Promise}\n */\nPointerDetectorFilter.prototype.addWindow = function(window, callback){\n  checkType('PointerDetectorWindowMediaParam', 'window', window, {required: true});\n\n  var params = {\n    window: window,\n  };\n\n  return this.invoke('addWindow', params, callback);\n};\n/**\n * @callback module:pointerdetector.PointerDetectorFilter~addWindowCallback\n * @param {external:Error} error\n */\n\n/**\n * Removes all pointer detector windows\n *\n * @alias module:pointerdetector.PointerDetectorFilter.clearWindows\n *\n * @param {module:pointerdetector.PointerDetectorFilter~clearWindowsCallback} [callback]\n *\n * @return {external:Promise}\n */\nPointerDetectorFilter.prototype.clearWindows = function(callback){\n  return this.invoke('clearWindows', callback);\n};\n/**\n * @callback module:pointerdetector.PointerDetectorFilter~clearWindowsCallback\n * @param {external:Error} error\n */\n\n/**\n * Removes a window from the list to be monitored\n *\n * @alias module:pointerdetector.PointerDetectorFilter.removeWindow\n *\n * @param {external:String} windowId\n *  the id of the window to be removed\n *\n * @param {module:pointerdetector.PointerDetectorFilter~removeWindowCallback} [callback]\n *\n * @return {external:Promise}\n */\nPointerDetectorFilter.prototype.removeWindow = function(windowId, callback){\n  checkType('String', 'windowId', windowId, {required: true});\n\n  var params = {\n    windowId: windowId,\n  };\n\n  return this.invoke('removeWindow', params, callback);\n};\n/**\n * @callback module:pointerdetector.PointerDetectorFilter~removeWindowCallback\n * @param {external:Error} error\n */\n\n/**\n * This method allows to calibrate the tracking color.\n * \n * The new tracking color will be the color of the object in the colorCalibrationRegion.\n *\n * @alias module:pointerdetector.PointerDetectorFilter.trackColorFromCalibrationRegion\n *\n * @param {module:pointerdetector.PointerDetectorFilter~trackColorFromCalibrationRegionCallback} [callback]\n *\n * @return {external:Promise}\n */\nPointerDetectorFilter.prototype.trackColorFromCalibrationRegion = function(callback){\n  return this.invoke('trackColorFromCalibrationRegion', callback);\n};\n/**\n * @callback module:pointerdetector.PointerDetectorFilter~trackColorFromCalibrationRegionCallback\n * @param {external:Error} error\n */\n\n/**\n * @alias module:pointerdetector.PointerDetectorFilter.constructorParams\n *\n * @property {module:pointerdetector/complexTypes.WindowParam} calibrationRegion\n *  region to calibrate the filter\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the {@link module:core.MediaPipeline MediaPipeline} to which the filter belongs\n *\n * @property {module:pointerdetector/complexTypes.PointerDetectorWindowMediaParam} [windows]\n *  list of detection windows for the filter.\n */\nPointerDetectorFilter.constructorParams = {\n  calibrationRegion: {\n    type: 'WindowParam',\n    required: true\n  },\n\n  mediaPipeline: {\n    type: 'MediaPipeline',\n    required: true\n  },\n\n  windows: {\n    type: 'PointerDetectorWindowMediaParam',\n    isList: true,\n  },\n};\n\n/**\n * @alias module:pointerdetector.PointerDetectorFilter.events\n *\n * @extend module:core/abstracts.Filter.events\n */\nPointerDetectorFilter.events = Filter.events.concat(['WindowIn', 'WindowOut']);\n\nmodule.exports = PointerDetectorFilter;\n\nPointerDetectorFilter.check = function(key, value)\n{\n  if(!(value instanceof PointerDetectorFilter))\n    throw ChecktypeError(key, PointerDetectorFilter, value);\n};\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module pointerdetector/complexTypes\n *\n * @copyright 2013-2014 Kurento (http://kurento.org/)\n * @license LGPL\n */\n\nvar PointerDetectorWindowMediaParam = require('./PointerDetectorWindowMediaParam');\nvar WindowParam = require('./WindowParam');\n\n\nexports.PointerDetectorWindowMediaParam = PointerDetectorWindowMediaParam;\nexports.WindowParam = WindowParam;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar checkType = require('checktype');\n\n/**\n * Checker for {@link pointerdetector/complexTypes.PointerDetectorWindowMediaParam}\n *\n * @memberof module:pointerdetector/complexTypes\n *\n * @param {external:String} key\n * @param {module:pointerdetector/complexTypes.PointerDetectorWindowMediaParam} value\n */\nfunction checkPointerDetectorWindowMediaParam(key, value)\n{\n  checkType('String', key+'.id', value.id, true);\n  checkType('int', key+'.height', value.height, true);\n  checkType('int', key+'.width', value.width, true);\n  checkType('int', key+'.upperRightX', value.upperRightX, true);\n  checkType('int', key+'.upperRightY', value.upperRightY, true);\n  checkType('String', key+'.activeImage', value.activeImage);\n  checkType('float', key+'.imageTransparency', value.imageTransparency);\n  checkType('String', key+'.image', value.image);\n};\n\n\n/**\n * Data structure for UI Pointer detection in video streams.\n * \n * All the coordinates are in pixels. X is horizontal, Y is vertical, running from the top of the window. Thus, 0,0 corresponds to the topleft corner.\n *\n * @memberof module:pointerdetector/complexTypes\n *\n * @typedef pointerdetector/complexTypes.PointerDetectorWindowMediaParam\n *\n * @type {Object}\n * @property {external:String} id\n *  id of the window for pointer detection\n * @property {external:Integer} height\n *  height in pixels\n * @property {external:Integer} width\n *  width in pixels\n * @property {external:Integer} upperRightX\n *  X coordinate in pixels of the upper left corner\n * @property {external:Integer} upperRightY\n *  Y coordinate in pixels of the upper left corner\n * @property {external:String} activeImage\n *  uri of the image to be used when the pointer is inside the window\n * @property {external:Number} imageTransparency\n *  transparency ratio of the image\n * @property {external:String} image\n *  uri of the image to be used for the window.\n *  \n *  If {@link module:pointerdetector/complexTypes.PointerDetectorWindowMediaParam#activeImage} has been set, it will only be shown when the pointer is outside of the window.\n */\n\n\nmodule.exports = checkPointerDetectorWindowMediaParam;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar checkType = require('checktype');\n\n/**\n * Checker for {@link pointerdetector/complexTypes.WindowParam}\n *\n * @memberof module:pointerdetector/complexTypes\n *\n * @param {external:String} key\n * @param {module:pointerdetector/complexTypes.WindowParam} value\n */\nfunction checkWindowParam(key, value)\n{\n  checkType('int', key+'.topRightCornerX', value.topRightCornerX, true);\n  checkType('int', key+'.topRightCornerY', value.topRightCornerY, true);\n  checkType('int', key+'.width', value.width, true);\n  checkType('int', key+'.height', value.height, true);\n};\n\n\n/**\n * Parameter representing a window in a video stream.\n * It is used in command and constructor for media elements.\n * \n * All units are in pixels, X runs from left to right, Y from top to bottom.\n *\n * @memberof module:pointerdetector/complexTypes\n *\n * @typedef pointerdetector/complexTypes.WindowParam\n *\n * @type {Object}\n * @property {external:Integer} topRightCornerX\n *  X coordinate of the left upper point of the window\n * @property {external:Integer} topRightCornerY\n *  Y coordinate of the left upper point of the window\n * @property {external:Integer} width\n *  width in pixels of the window\n * @property {external:Integer} height\n *  height in pixels of the window\n */\n\n\nmodule.exports = checkWindowParam;\n","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n\n/**\n * Number.isInteger() polyfill\n * @function external:Number#isInteger\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger Number.isInteger}\n */\nif (!Number.isInteger) {\n  Number.isInteger = function isInteger (nVal) {\n    return typeof nVal === \"number\" && isFinite(nVal)\n        && nVal > -9007199254740992 && nVal < 9007199254740992\n        && Math.floor(nVal) === nVal;\n  };\n}\n\n\nfunction ChecktypeError(key, type, object)\n{\n  return SyntaxError(key + ' param should be a ' + (type.name || type)\n                    + ', not ' + value.constructor.name);\n}\n\n\n//\n// Basic types\n//\n\nfunction checkArray(type, key, value)\n{\n  if(!(value instanceof Array))\n    throw ChecktypeError(key, 'Array of '+type, value);\n\n  for(var i=0, item; item=value[i]; i++)\n    checkType(type, key+'['+i+']', item);\n};\n\nfunction checkBoolean(key, value)\n{\n  if(typeof value != 'boolean')\n    throw ChecktypeError(key, Boolean, value);\n};\n\nfunction checkNumber(key, value)\n{\n  if(typeof value != 'number')\n    throw ChecktypeError(key, Number, value);\n};\n\nfunction checkInteger(key, value)\n{\n  if(!Number.isInteger(value))\n    throw ChecktypeError(key, 'Integer', value);\n};\n\nfunction checkObject(key, value)\n{\n  if(typeof value != 'object')\n    throw ChecktypeError(key, Object, value);\n};\n\nfunction checkString(key, value)\n{\n  if(typeof value != 'string')\n    throw ChecktypeError(key, String, value);\n};\n\n\n// Checker functions\n\nfunction checkType(type, key, value, options)\n{\n  options = options || {};\n\n  if(value != undefined)\n  {\n    if(options.isArray)\n      return checkArray(type, key, value);\n\n    var checker = checkType[type];\n    if(checker) return checker(key, value);\n\n    console.warn(\"Could not check \"+key+\", unknown type \"+type);\n//    throw TypeError(\"Could not check \"+key+\", unknown type \"+type);\n  }\n\n  else if(options.required)\n    throw SyntaxError(key+\" param is required\");\n\n};\n\nfunction checkParams(params, scheme, class_name)\n{\n  var result = {};\n\n  // check MediaObject params\n  for(var key in scheme)\n  {\n    var value = params[key];\n\n    var s = scheme[key];\n\n    var options = {required: s.required, isArray: s.isList};\n\n    checkType(s.type, key, value, options);\n\n    if(value == undefined) continue;\n\n    result[key] = value;\n    delete params[key];\n  };\n\n  if(Object.keys(params).length)\n    console.warn('Unused params for '+class_name+':', params);\n\n  return result;\n};\n\nfunction checkMethodParams(callparams, method_params)\n{\n  var result = {};\n\n  var index=0, param;\n  for(; param=method_params[index]; index++)\n  {\n    var key = param.name;\n    var value = callparams[index];\n\n    var options = {required: param.required, isArray: param.isList};\n\n    checkType(param.type, key, value, options);\n\n    result[key] = value;\n  }\n\n  var params = callparams.slice(index);\n  if(params.length)\n    console.warning('Unused params:', params);\n\n  return result;\n};\n\n\nmodule.exports = checkType;\n\ncheckType.checkParams    = checkParams;\ncheckType.ChecktypeError = ChecktypeError;\n\n\n// Basic types\n\ncheckType.boolean = checkBoolean;\ncheckType.double  = checkNumber;\ncheckType.float   = checkNumber;\ncheckType.int     = checkInteger;\ncheckType.Object  = checkObject;\ncheckType.String  = checkString;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"]}